/********   Start of Global    ********/
.center {
  text-align: center;
}

.appBackground {
  background-color:#ECE7E7;
  height: 101vh;
}

.aboveWhiteSpace {
  margin-top: 3vh;
}

.blueColor {
  color: navy;
}
/********   End of Global    ********/


/********   Start of Point Component    ********/
.pointArea {
  border-color: black;
  border-style: solid;
  border-width: 1px;
}

.displayData {
  font-size: 5vh; 
}

.rightAlignData {
  text-align: center;
}

.leftAlignData {
  text-align: left;
}

/*Change the position of the data props associated Display componets*/
@media screen and  (min-width:1020px){
  .rightAlignData {
    text-align: left;
  }

  .leftAlignData {
    margin-left: 0 !important;
  }  
}

/*CSS use to show a rising dollar sign when the user wins a round*/
.risingDollarSign {
  animation-name: rising;
  animation-duration: 2s;
  animation-iteration-count: 1;
  color:gold;
}

/*CSS use to show a rising dollar sign when the user lose a round*/
.losingMoneySign {
  animation-name: rising;
  animation-duration: 2s;
  animation-iteration-count: 1;
  color:red;
}

/*CSS use to show a rising dollar sign when the user wins or lose a round*/
@keyframes rising {
  0% {font-size: 3vh};
  40% {font-size: 5vh};
  80% {font-size: 7vh};
  100% {font-size: 10vh};
}
/********   End of Point Component    ********/

/********   Start of Dice Component    ********/
.leftDice {
  text-align: right;
}

.rightDice {
  text-align: left;
}

/*CSS use to show a rolling dice at the start of a round*/
.leftRollingDice {
  animation-name: bounce;
  animation-duration: .8s;
  animation-iteration-count:infinite;  
}

/*CSS use to show a rolling dice at the start of a round*/
.rightRollingDice {
  animation-name: bounce;
  animation-duration: 1s;
  animation-iteration-count:5;  
}

/*CSS use to show a rolling dice bouncing up and down*/
@keyframes bounce {
  0%   { transform: translateY(0); }
  50%  { transform: translateY(-20px); }
  100% { transform: translateY(0); }
}

/********   End of Dice Component    ********/

/********   Start of Button Component    ********/
.buttonStyle {
  text-align: center;
  font-size: 10vh;
}

.buttonTextColor {
  color: black;
}
/********   End of Button Component    ********/

/********   Start of Instructions Component    ********/

/********   End of Instructions Component    ********/

/********   Start of Bankrupt Component    ********/
.bankrupt {
  background-color:white;
  height: 101vh;
}

.buttonGameOverColor {
  color: red;
}
/********   End of Instructions Component    ********/

/********** Old Stuff*********/
.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 40vmin;
  pointer-events: none;
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/********** Old Stuff*********/
